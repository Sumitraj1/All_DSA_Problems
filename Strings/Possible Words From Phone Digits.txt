Given a keypad as shown in the diagram, and an N digit number which is represented by array a[ ], the task is to list all words which are possible by pressing these numbers.


Example 1:

Input: N = 3, a[] = {2, 3, 4}
Output:
adg adh adi aeg aeh aei afg afh afi 
bdg bdh bdi beg beh bei bfg bfh bfi 
cdg cdh cdi ceg ceh cei cfg cfh cfi 
Explanation: When we press 2,3,4 then 
adg, adh, adi, ... cfi are the list of 
possible words.
Example 2:

Input: N = 3, a[] = {3, 4, 5}
Output:
dgj dgk dgl dhj dhk dhl dij dik dil 
egj egk egl ehj ehk ehl eij eik eil 
fgj fgk fgl fhj fhk fhl fij fik fil
Explanation: When we press 3,4,5 then 
dgj, dgk, dgl, ... fil are the list of 
possible words.

//User function Template for Java

class Solution
{
    //Function to find list of all words possible by pressing given numbers.
    static ArrayList <String> possibleWords(int a[], int N)
    {
        // your code here  
        HashMap<Integer, List<Character>> map = new HashMap<>();
        map.put(2, Arrays.asList(new Character[]{'a', 'b', 'c'}));
        map.put(3, Arrays.asList(new Character[]{'d', 'e', 'f'}));
        map.put(4, Arrays.asList(new Character[]{'g', 'h', 'i'}));
        map.put(5, Arrays.asList(new Character[]{'j', 'k', 'l'}));
        map.put(6, Arrays.asList(new Character[]{'m', 'n', 'o'}));
        map.put(7, Arrays.asList(new Character[]{'p', 'q', 'r', 's'}));
        map.put(8, Arrays.asList(new Character[]{'t', 'u', 'v'}));
        map.put(9, Arrays.asList(new Character[]{'w', 'x', 'y', 'z'}));
        
        ArrayList<String> res = new ArrayList<>();
        
        helper(a, 0, "", map, res);
        
        return res;
    }
     private static void helper(int a[], int i, String cur, HashMap<Integer, List<Character>> map, ArrayList<String> res){
        
        if(i == a.length){
            res.add(cur);
            return;
        }
        
        for(char c : map.get(a[i])){
            helper(a, i+1, cur+c, map, res);
        }
    }
}
