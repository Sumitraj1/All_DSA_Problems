Given a string S. For each index i(1<=i<=N-1), erase it if s[i] is equal to s[i-1] in the string.

Example 1:

Input:
S = aabb
Output:  ab 
Explanation: 'a' at 2nd position is
appearing 2nd time consecutively.
Similiar explanation for b at
4th position.

Example 2:

Input:
S = aabaa
Output:  aba
Explanation: 'a' at 2nd position is
appearing 2nd time consecutively.
'a' at fifth position is appearing
2nd time consecutively.
 

class Solution{
    public String removeConsecutiveCharacter(String S){
    //   String res="";
    //     res+=S.charAt(0);
    //     for(int i=1;i<S.length();i++){
    //         if(S.charAt(i-1)!=S.charAt(i)){
    //             res+=S.charAt(i);
    //         }
    //     }
    //     return res;
    
    
    
    
    //  int n=S.length();
    //     String res="";
    //     for(int i=0;i<n; i++){
    //         if(i<n-1 && S.charAt(i)==S.charAt(i+1)){
    //             continue;
    //         }else{
    //             res+=S.charAt(i);
    //         }
    //     }
    //     return res;
    
    
    Stack<Character> st = new Stack<>();
        for(int i =0 ; i < S.length() ; i++){
            char ch = S.charAt(i);
            if(st.isEmpty()) st.push(ch);
            else if(!st.isEmpty() && st.peek() != ch) st.push(ch);
            else if(!st.isEmpty() && st.peek() == ch) continue;
        }
        StringBuilder sb = new StringBuilder();
        while(!st.isEmpty()){
            sb.append(st.pop());
        }
        sb.reverse();
        return sb+"";
    }
}