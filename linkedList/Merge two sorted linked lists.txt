Given two sorted linked lists consisting of N and M nodes respectively. The task is to merge both of the list (in-place) and return head of the merged list.
 

Example 1:

Input:
N = 4, M = 3 
valueN[] = {5,10,15,40}
valueM[] = {2,3,20}
Output: 2 3 5 10 15 20 40
Explanation: After merging the two linked
lists, we have merged list as 2, 3, 5,
10, 15, 20, 40.


class LinkedList
{
    //Function to merge two sorted linked list.
    Node sortedMerge(Node head1, Node head2) {
     
     Node head=new Node(0);
     Node cur=head;
     while(head1!=null && head2!=null){
         if(head1.data<=head2.data){
             cur.next=head1;
             head1=head1.next;
         }
         else{
             cur.next=head2;
             head2=head2.next;
         }
         cur=cur.next;
     }
     if(head1!=null){
         cur.next=head1;
     }
     if(head2!=null){
         cur.next=head2;
     }
     return head.next;
   } 
}