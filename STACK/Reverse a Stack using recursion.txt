
You are given a stack St. You have to reverse the stack using recursion.

Example 1:

Input:
St = {3,2,1,7,6}
Output:
{6,7,1,2,3}
Explanation:
Input stack after reversing will look like the stack in the output.

class Solution
{ 
    static void reverse(Stack<Integer> s)
    {
        // add your code here
           if(s.isEmpty()){
               return;
            }
            if(s.size()>0){
                int x=s.pop();
                reverse(s);
                insertAtBottom(s,x);
            }
    }        
        
       static void insertAtBottom(Stack<Integer> s,int a){
            if(s.size()==0){
                s.push(a);
                return;
            }
            else{
                int b=s.pop();
                insertAtBottom(s,a);
                s.push(b);
            }
        }
    
}