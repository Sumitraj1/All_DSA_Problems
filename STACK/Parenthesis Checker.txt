
Given an expression string x. Examine whether the pairs and the orders of {,},(,),[,] are correct in exp.
For example, the function should return 'true' for exp = [()]{}{[()()]()} and 'false' for exp = [(]).

Note: The drive code prints "balanced" if function return true, otherwise it prints "not balanced".

Example 1:

Input:
{([])}
Output: 
true
Explanation: 
{ ( [ ] ) }. Same colored brackets can form 
balanced pairs, with 0 number of 
unbalanced bracket.


class Solution
{
    //Function to check if brackets are balanced or not.
    static boolean ispar(String x)
    {
        // add your code here
        Stack<Character> stck = new Stack<>();
        for(char c:x.toCharArray()){
            if(c=='{'){
                stck.push('}');
            }
            else if(c=='('){
                stck.push(')');
            }
            else if(c=='['){
                stck.push(']');
            }
            else if(stck.isEmpty()||stck.pop()!=c){
                return false;
            }
        }
        return stck.isEmpty();
    }
}
