

Given an ascending sorted rotated array Arr of distinct integers of size N. The array is right rotated K times. Find the value of K.

Example 1:

Input:
N = 5
Arr[] = {5, 1, 2, 3, 4}
Output: 1
Explanation: The given array is 5 1 2 3 4. 
The original sorted array is 1 2 3 4 5. 
We can see that the array was rotated 
1 times to the right.

class Solution {
    int findKRotation(int arr[], int n) {
        // code here
        
          int low = 0, high = n-1;
        
        while (low <= high) {
            
            int mid = low + (high - low)/2;
            
            if (mid != 0 && arr[mid-1] > arr[mid]) {
                return mid;
            } else if (arr[0] > arr[mid]) {
                high = mid-1;
            } else if (arr[0] < arr[mid]) {
                low = mid+1;
            } else if (mid == 0) {
                low = mid+1;
            }
        }
        
        return 0;
    }
}