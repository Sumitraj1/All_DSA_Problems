Given an array arr[] of distinct integers of size N and a value sum, the task is to find the count of triplets (i, j, k), having (i<j<k) with the sum of (arr[i] + arr[j] + arr[k]) smaller than the given value sum.


Example 1:


Input: N = 4, sum = 2
arr[] = {-2, 0, 1, 3}
Output:  2
Explanation: Below are triplets with 
sum less than 2 (-2, 0, 1) and (-2, 0, 3). 



class Solution
{
    long countTriplets(long arr[], int n,int sum)
    {
        
        Arrays.sort(arr);
        long c=0;
        for(int k=0;k<n-2;k++){
            int i=k+1;
            int j=n-1;
            
            while(i<j){
                long s=arr[i]+arr[j]+arr[k];
                if(s<sum){
                    c+=(j-i);
                    i++;
                }
                else if(arr[i]+arr[j]+arr[k]>=sum){
                    j--;
                }
                
            }
        }
        return c;
    }
}
