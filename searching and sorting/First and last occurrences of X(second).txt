Given a sorted array having N elements, find the indices of the first and last occurrences of an element X in the given array.

Note: If the number X is not found in the array, return '-1' as an array.

Example 1:

Input:
N = 4 , X = 3
arr[] = { 1, 3, 3, 4 }
Output:
1 2
Explanation:
For the above array, first occurence
of X = 3 is at index = 1 and last
occurence is at index = 2.

class Solution{
    public ArrayList<Integer> firstAndLast(int arr[], int n, int x){
        // Code here
         ArrayList<Integer> list=new ArrayList<>();
        int m=0;
        for(int i=0;i<arr.length;i++)
        {
            if(arr[i]==x)
            {
                list.add(i);
                m=1;
                break;
            }
        }
        for(int i=arr.length-1;i>=0;i--)
        {
            if(arr[i]==x)
            {
                list.add(i);
                break;
            }
        }
        if(m==0)
        {
            list.add(-1);
        }
        return list;
    }
}
