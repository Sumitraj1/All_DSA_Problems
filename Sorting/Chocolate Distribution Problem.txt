The problem is an easy level in problem we have given an array A of packets with A[i] chocolate and another interger 'M' and we have to distribute chocolate among 'M' student following condition.
1. Each students get's exact one packet.
2. The difference between maximum number of chocolates given to a student and minimum number of chocolates given to a student is minimum.

Approach :- Let's understand approach. the intution behind problem is very simple we simply sort the array and iterate it in 'M' sized subarray and find the difference of (max number) and (min number) and store minimum difference among all the M subarray slides.

Code Dry Run :-
N = 8, M = 5, and A = {3, 4, 1, 9, 56, 7, 9, 12}.

Step 1: Sort the array A in ascending order.
A = {1, 3, 4, 7, 9, 9, 12, 56}

Step 2: Initialize the variable mini to INT_MAX.
mini = INT_MAX (which is a very large number)

Step 3: Initialize the pointers i = 0 and j = m - 1 = 5 - 1 = 4.

Step 4: Enter the while loop.
```
i = 0, j = 4
Calculate diff = A[j] - A[i] = A[4] - A[0] = 9 - 1 = 8
Update mini to min(mini, diff) => mini = min(INT_MAX, 8) = 8
Increment both i and j. i = 1, j = 5
```
Step 4: Continue in the while loop.
```
i = 1, j = 5
Calculate diff = A[j] - A[i] = A[5] - A[1] = 9 - 3 = 6
Update mini to min(mini, diff) => mini = min(8, 6) = 6
Increment both i and j. i = 2, j = 6
```
Step 5: Continue in the while loop.
```
i = 2, j = 6
Calculate diff = A[j] - A[i] = A[6] - A[2] = 12 - 4 = 8
Update mini to min(mini, diff) => mini = min(6, 8) = 6
Increment both i and j. i = 3, j = 7
```
Step 6: Continue in the while loop.
```
i = 3, j = 7
Calculate diff = A[j] - A[i] = A[7] - A[3] = 56 - 7 = 49
Update mini to min(mini, diff) => mini = min(6, 49) = 6
Increment both i and j. i = 4, j = 8
```

Step 7: The right pointer j has reached the end of the array, so the while loop ends.

Step 8: Return the value of mini, which is 6.

Final Output: The minimum difference between the maximum and minimum elements among all possible subarrays of size 5 is 6.




class Solution
{
    public long findMinDiff (ArrayList<Integer> a, int n, int m)
    {
        // your code here
         Collections.sort(a);
         if(m == 0 || n == 0){
            return 0;
         }
          
         int i=0;
         int j=m-1;
         long min=99999999;
         while(j<n){
                long temp=(long)a.get(j)-(long)a.get(i);
                if(temp<min) min=temp;
                i++;
                j++;
                
          }
        return min; 
           
            
       
            
            
    }
}