
Given a word pat and a text txt. Return the count of the occurrences of anagrams of the word in the text.

Example 1:

Input:
txt = forxxorfxdofr
pat = for
Output: 3
Explanation: for, orf and ofr appears
in the txt, hence answer is 3.


class Solution {

    int search(String pat, String txt) {
        // code here
        
          HashMap<Character,Integer>map=new HashMap<>();
        for(int i=0;i<pat.length();i++)
        {
              map.put(pat.charAt(i),map.getOrDefault(pat.charAt(i),0)+1);
        }
        
        int i=0,j=0,res=0;
        int count=map.size();
        int k=pat.length();
        
        while(j<txt.length())
        {
             if(map.containsKey(txt.charAt(j)))
             {
                   map.put(txt.charAt(j),map.get(txt.charAt(j))-1);
                   if(map.get(txt.charAt(j))==0)
                   count--;
             }
             if(j-i+1<k)
             {
                  j++;
             }
             else if(j-i+1==k)
             {
                  if(count==0){
                      res++;
                      
                  }
                  if(map.containsKey(txt.charAt(i)))
                  {
                      map.put(txt.charAt(i),map.get(txt.charAt(i))+1);
                      
                      if(map.get(txt.charAt(i))==1)
                      count++;
                  }
                  i++;
                  j++;
             }
        }
        return res;
        
    }
}