
public class peakElement {
	 static int findPeak(int arr[], int n)
	    {
	        int l = 0;
	        int r = n-1;
	        int mid = 0;
	       
	        while (l <= r) {
	 
	            // finding mid by binary right shifting.
	            mid = (l + r) >> 1;
	 
	            // first case if mid is the answer
	        	if(mid>0 && mid<n-1) {
	        		if(arr[mid]>arr[mid-1] && arr[mid]>arr[mid+1]) {
	        			return mid;
	        		}
	        		
	        		else if(arr[mid-1]>arr[mid]) {
	        			r=mid-1;
	        		}
	        		else if(arr[mid+1]>arr[mid]) {
	        			l=mid+1;
	        		}
	        		
	        	}
	        	else if(mid==0) {
	        		if(arr[0]>arr[1]) {
	        			return 0;
	        		}
	        		else {
	        			return 1;
	        		}
	        	}
	        	
	        	else if(mid==n-1) {
	        		if(arr[n-1]>arr[n-2]) {
	        			return n-1;
	        		}
	        		else {
	        			return n-2;
	        		}
	        	}
	           
	           
	        }
	        return 0;
	       
	        
	    }
	 

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		 int arr[] = { 1, 3,10, 20, 4, 1, 0 };
	        int n = arr.length;
	        System.out.println("Index of a peak point is "
	                           + findPeak(arr, n));

	}

}
